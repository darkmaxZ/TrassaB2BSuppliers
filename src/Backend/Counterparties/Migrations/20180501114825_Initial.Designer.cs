// <auto-generated />
using System;
using Counterparties.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Metadata.Internal;
using Microsoft.EntityFrameworkCore.Migrations;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Counterparties.Migrations
{
    [DbContext(typeof(CounterpartiesContext))]
    [Migration("20180501114825_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("counterparties")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.1.0-preview2-30571");

            modelBuilder.Entity("Counterparties.Database.Models.Counterparty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Age");

                    b.Property<int>("EmployeesNumber");

                    b.Property<string>("FullName");

                    b.Property<int>("GroupNameId");

                    b.Property<int>("OrganizationForm");

                    b.Property<int>("OrganizationId");

                    b.Property<int>("Role");

                    b.Property<string>("ShortName");

                    b.HasKey("Id");

                    b.HasIndex("GroupNameId");

                    b.ToTable("Counterparties");
                });

            modelBuilder.Entity("Counterparties.Database.Models.CounterpartyGroupOwner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CounterpartyId");

                    b.Property<int>("GroupOwnerId");

                    b.HasKey("Id");

                    b.HasIndex("CounterpartyId");

                    b.HasIndex("GroupOwnerId");

                    b.ToTable("CounterpartyGroupOwner");
                });

            modelBuilder.Entity("Counterparties.Database.Models.Filial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AddressId");

                    b.Property<int>("CountepartyId");

                    b.Property<int?>("CounterpartyId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("CounterpartyId");

                    b.ToTable("Filials");
                });

            modelBuilder.Entity("Counterparties.Database.Models.FilialCollaborator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CollaboratorId");

                    b.Property<int>("FilialId");

                    b.HasKey("Id");

                    b.HasIndex("FilialId");

                    b.ToTable("FilialCollaborators");
                });

            modelBuilder.Entity("Counterparties.Database.Models.FilialPhoto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("FileId");

                    b.Property<int>("FilialId");

                    b.HasKey("Id");

                    b.HasIndex("FilialId");

                    b.ToTable("FilialPhotos");
                });

            modelBuilder.Entity("Counterparties.Database.Models.GroupName", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("GroupNames");
                });

            modelBuilder.Entity("Counterparties.Database.Models.GroupOwner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("NaturalPersonId");

                    b.HasKey("Id");

                    b.ToTable("GroupOwners");
                });

            modelBuilder.Entity("Counterparties.Database.Models.Counterparty", b =>
                {
                    b.HasOne("Counterparties.Database.Models.GroupName", "GroupName")
                        .WithMany("Counterparties")
                        .HasForeignKey("GroupNameId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Counterparties.Database.Models.CounterpartyGroupOwner", b =>
                {
                    b.HasOne("Counterparties.Database.Models.Counterparty", "Counterparty")
                        .WithMany("CounterpartyGroupOwners")
                        .HasForeignKey("CounterpartyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Counterparties.Database.Models.GroupOwner", "GroupOwner")
                        .WithMany("CounterpartyGroupOwners")
                        .HasForeignKey("GroupOwnerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Counterparties.Database.Models.Filial", b =>
                {
                    b.HasOne("Counterparties.Database.Models.Counterparty", "Counterparty")
                        .WithMany("Filials")
                        .HasForeignKey("CounterpartyId");
                });

            modelBuilder.Entity("Counterparties.Database.Models.FilialCollaborator", b =>
                {
                    b.HasOne("Counterparties.Database.Models.Filial", "Filial")
                        .WithMany("FilialCollaborators")
                        .HasForeignKey("FilialId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Counterparties.Database.Models.FilialPhoto", b =>
                {
                    b.HasOne("Counterparties.Database.Models.Filial", "Filial")
                        .WithMany("FilialPhotos")
                        .HasForeignKey("FilialId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
